name: Deploy to GCP VM

on:
  push:
    branches: [api-development]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.GCP_SSH_KEY }}

      - name: Write .env file from secret
        run: |
          mkdir -p api
          echo "${{ secrets.API_ENV_FILE }}" > api/.env

      - name: Ensure remote target directory exists
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} "mkdir -p ~/regops/api"

      - name: Copy code and .env to VM
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./api/ ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }}:~/regops/api/

      - name: Write GCP credentials file on VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} "printf '%s' '${{ secrets.GCP_CREDENTIALS_JSON }}' > ~/regops/api/gcp-creds.json"

      - name: Check for gcp-creds.json on VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} "ls -l ~/regops/api/gcp-creds.json && cat ~/regops/api/gcp-creds.json && python3 -c 'import json; json.load(open(\"~/regops/api/gcp-creds.json\"))' || (echo 'Invalid JSON!' && exit 1)"

      - name: Deploy on VM
        run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} "
              cd ~/regops/api && \
              ls -la && \
              docker compose down regops-api || true && \
              docker compose pull regops-api || true && \
              docker compose build regops-api && \
              docker compose up -d --remove-orphans regops-api
            "